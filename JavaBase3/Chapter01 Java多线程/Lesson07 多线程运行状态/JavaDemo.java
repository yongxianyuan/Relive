/*
	对于多线程的开发而言，编写程序的过程之中总是按照：
		--- 先定义线程主体类
		--- 然后通过Thread类进行线程的启动，但并不意味着你调用了start()方法，线程就已经开始运行了
			因为整体的线程处理有自己的一套运行状态

		创建 --- start() ---> 就绪状态   <-------调度------> 运行状态 ------> 终止
								^								^
								|								|
								|								|
								|								|	
								 <-----阻塞解除-----阻塞状态--导致组塞的事件

	
	1、任何一个线程对象都应该是用Thread类进行封装，所有线程的启动使用的是start()方法，但是启动的时候将进入
	到一种就绪状态，现在并没有执行；

	2、进入到就绪状态之后就需要等待进行资源调度，当某一个线程调度成功之后则进入到运行状态（run()方法的执行，
	但是所有的线程不可能一直持续的执行下去，中间需要产生一些暂停的状态。 例如： 某个线程执行一段时间之后就
	需要让出资源，而后这个线程就进入到阻塞状态，随后重新回归到就绪状态；

	3、当run()方法执行完毕之后，实际上该线程的主要任务就结束了，那么此时就可以直接进入到停止状态。



*/		

public class JavaDemo {
	public static void main(String[] args) {
		
	}
}